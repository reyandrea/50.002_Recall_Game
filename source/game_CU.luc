module game_CU (
    input clk,
    input rst,
    input up_button,
    input down_button,
    input right_button,
    input left_button,
    input start_button,
    input reset_button,
    input decrease_timer_gameplay,
    input decrease_timer_mapdisplay,
    
    input regfile_datain[16], //direct reading of regfile data from read_address_b
    
    output alufn[6], // ALUFN: -
    output asel[4], //ASEL: -
    output bsel[4],//BSEL: -
    output we_regfile[1],//WE: b1
    output regfile_read_address_a[4], //Ra: -
    output regfile_read_address_b[4], //Rb: -
    output regfile_write_address[4],//Rc: 0xD
    output wdsel[2], //WDSEL: b01
    output romsel[3], //ROMSEL: b000
    output outsel[2], //OUTSEL: b00
    output ledsel[2], //LEDSEL: b00
    output colsel[2]
  ) {
  
  .clk(clk){
    fsm game_fsm={
      START_NEW_GAME,
      
      RESET_SCORE_TO_0,
      
      //RESET ROUND
      RESET_TIMER_0,
      RESET_X_COORD,  
      RESET_Y_COORD, 
      RESET_SELECT_MAPS,  
      RESET_CORRECT_MAP, 
      RESET_MEM_TRAIL_1,
      RESET_MEM_TRAIL_2,
      RESET_MEM_TRAIL_3,
      RESET_MEM_TRAIL_4,
      RESET_MEM_TRAIL_5,
      RESET_MEM_TRAIL_6,
      
      
      
      START_STATE,
      
      //Randomiser
      RANDOM_CHOOSE_MAP,
      RANDOM_SET_MAP,
      
      //Set map A display time
      A_CHECK_SCORE_0,
      A_CHECK_SCORE_0_BRANCH,
      A_SET_TIMER_0_S10,
      A_CHECK_SCORE_1,
      A_CHECK_SCORE_1_BRANCH,
      A_SET_TIMER_1_S7,
      A_SET_TIMER_2_S5,
      
      //Display map A
      MAP_A_DISPLAY,
      A_CHECK_TIMER_0,
      A_BRANCH_TIMER_0,
      A_DECREASE_TIMER_1,
      
      //Set map B display time
      B_CHECK_SCORE_0,
      B_CHECK_SCORE_0_BRANCH,
      B_SET_TIMER_0_S10,
      B_CHECK_SCORE_1,
      B_CHECK_SCORE_1_BRANCH,
      B_SET_TIMER_1_S7,
      B_SET_TIMER_2_S5,
      
      //Display map B
      MAP_B_DISPLAY,
      B_CHECK_TIMER_0,
      B_BRANCH_TIMER_0,
      B_DECREASE_TIMER_1,
      
      //Set map C display time
      C_CHECK_SCORE_0,
      C_CHECK_SCORE_0_BRANCH,
      C_SET_TIMER_0_S10,
      C_CHECK_SCORE_1,
      C_CHECK_SCORE_1_BRANCH,
      C_SET_TIMER_1_S7,
      C_SET_TIMER_2_S5,
      
      //Display map C   
      MAP_C_DISPLAY,
      C_CHECK_TIMER_0,
      C_BRANCH_TIMER_0,
      C_DECREASE_TIMER_1,
      
      //Display correct color
      SET_CORRECT_COLOUR_MAP,
      DISPLAY_CORRECT_COLOUR,
      CORRECT_COLOUR_CHECK_TIMER_0,
      CORRECT_COLOUR_BRANCH_TIMER_0,
      CORRECT_COLOUR_DECREASE_TIMER_1,
      
      
      DISPLAY_MEMORY_TRAILS,      
      SET_TIMER_90S,
      
      //Idle state timer
      IDLE,
      CHECK_GAME_TIMER,
      BRANCH_GAME_TIMER,
      DECREASE_GAME_TIMER,
      
      //Idle state movement checker
      UP_CHECKER,
      DOWN_CHECKER,
      LEFT_CHECKER,
      RIGHT_CHECKER,
      
      
      //End of round displays
      DISPLAY_SAD_FACE    
      
      
      };
  }

  always {
    // standard setting unless otherwise overwritten by each case 
    alufn = 0;
    asel = 0; 
    bsel = 0;
    we_regfile = 0;
    regfile_write_address = 1111;
    regfile_read_address_a = 0000;
    regfile_read_address_b = 0000;
    wdsel = 0;
    romsel = 0;
    outsel = 0;
    ledsel = 0;
    colsel = 0;
    
    if (rst) {
      //do something
    } else {
      case(game_fsm.q){
        game_fsm.START_NEW_GAME: 
          if (start_button){
              game_fsm.d = game_fsm.RESET_SCORE_TO_0;
          }
               
          else {        
              game_fsm.d = game_fsm.START_NEW_GAME;
          }
          
        game_fsm.RESET_SCORE_TO_0: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0000;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_TIMER_0;  
          
        game_fsm.RESET_TIMER_0: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0101;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_X_COORD;
          
        game_fsm.RESET_X_COORD: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0001;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;  
          
          game_fsm.d = game_fsm.RESET_Y_COORD;  
            
        game_fsm.RESET_Y_COORD: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0010;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_SELECT_MAPS;
            
        game_fsm.RESET_SELECT_MAPS: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0011;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_CORRECT_MAP;  
        
        game_fsm.RESET_CORRECT_MAP: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0100;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_MEM_TRAIL_1;
            
       game_fsm.RESET_MEM_TRAIL_1: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0010 ;
          we_regfile = b1;
          regfile_write_address = b0110;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_MEM_TRAIL_2;
            
       game_fsm.RESET_MEM_TRAIL_2: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0111;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_MEM_TRAIL_3;
            
       game_fsm.RESET_MEM_TRAIL_3: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b1000;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_MEM_TRAIL_4;     
            
       game_fsm.RESET_MEM_TRAIL_4: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b1001;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_MEM_TRAIL_5;     
            
        game_fsm.RESET_MEM_TRAIL_5: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b1010;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_MEM_TRAIL_6; 
                
        game_fsm.RESET_MEM_TRAIL_6: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b1011;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          //TODO: how to know to skip this, 
          //create another state?
          game_fsm.d = game_fsm.START_STATE;
          
        

            
        game_fsm.START_STATE:
          //alufn = ;
          //asel = ; 
          //bsel = ;
          we_regfile = b0;
          //regfile_write_address = ;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          //wdsel = ;
          romsel = b100; 
          outsel = b01;
          ledsel = b00;
          colsel = b10;
          if (start_button){
            game_fsm.d = game_fsm.RANDOM_CHOOSE_MAP;
          } else {
             game_fsm.d = game_fsm.START_STATE;
          }
          
        game_fsm.RANDOM_CHOOSE_MAP: 
          alufn = b011010; //"A"
          asel = b0001; 
          //bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0100;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RANDOM_SET_MAP;
          
         game_fsm.RANDOM_SET_MAP: 
            alufn = b011010; //"A"
            asel = b0010; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0011;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.A_CHECK_SCORE_0;
          
         game_fsm.A_CHECK_SCORE_0: 
            alufn = b110011; // CMPEQ
            asel = b0000; 
            bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0000;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.A_CHECK_SCORE_0_BRANCH;  
          
        game_fsm.A_CHECK_SCORE_0_BRANCH: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //directly reads from Rb
              game_fsm.d = game_fsm.A_SET_TIMER_0_S10;
            }
            else{
              game_fsm.d = game_fsm.A_CHECK_SCORE_1;
            }   
          
        game_fsm.A_SET_TIMER_0_S10: 
            alufn = b011010; //"A"
            asel = b0111; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_A_DISPLAY;   
              
        game_fsm.A_CHECK_SCORE_1: 
            alufn = b110011; // CMPEQ
            asel = b0000; 
            bsel = b0010 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0000;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.A_CHECK_SCORE_1_BRANCH;  
              
        game_fsm.A_CHECK_SCORE_1_BRANCH: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //direct read in
              game_fsm.d = game_fsm.A_SET_TIMER_1_S7;
            }
            else{
              game_fsm.d = game_fsm.A_SET_TIMER_2_S5;}   
                
         game_fsm.A_SET_TIMER_1_S7:
            alufn = b011010; //"A"
            asel = b0110; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_A_DISPLAY;   
              
              
         game_fsm.A_SET_TIMER_2_S5:
            alufn = b011010; //"A"
            asel = b0101; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_A_DISPLAY;
          
         game_fsm.MAP_A_DISPLAY: 
            //alufn = A;
            //asel = b0010; 
            //bsel = b0001 ;
            we_regfile = b0;
            //regfile_write_address = b0011;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            //wdsel = b00;
            romsel = b001;
            outsel = b01;
            ledsel = b00;
            colsel = b01;
            
            if (decrease_timer_mapdisplay){
              game_fsm.d = game_fsm.A_CHECK_TIMER_0;
            }
            else {
              game_fsm.d = game_fsm.MAP_A_DISPLAY;}
            
          game_fsm.A_CHECK_TIMER_0: 
            alufn = b110011; //CMPEQ
            asel = b0000; 
            bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.A_BRANCH_TIMER_0;          
                   
         game_fsm.A_BRANCH_TIMER_0: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //direct read in
              game_fsm.d = game_fsm.B_CHECK_SCORE_0;
            }
            else{
              game_fsm.d = game_fsm.A_DECREASE_TIMER_1;
            }
              
              
        game_fsm.A_DECREASE_TIMER_1: 
            alufn = b000001;  //SUB
            asel = b0000; 
            bsel = b0010 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_A_DISPLAY;
          
        game_fsm.B_CHECK_SCORE_0: 
          alufn = b110011; // CMPEQ
          asel = b0000; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b1111; // temp reg 15
          regfile_read_address_a = b0000;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b001;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.B_CHECK_SCORE_0_BRANCH;  
          
      game_fsm.B_CHECK_SCORE_0_BRANCH: 
          //alufn = CMPEQ;
          //asel = b0000; 
          //bsel = b0001 ;
          //we_regfile = b1;
          //regfile_write_address = b1100;
          //regfile_read_address_a = b0101;
          regfile_read_address_b = b1111; // temp reg 15
          //wdsel = b00;
          //romsel = b001;
          //outsel = b01;
          //ledsel = b00;
          //seven_seg_1 = b00;
          //seven_seg_2 = b00;
          
          if (regfile_datain[0]){                      //direct read in
            game_fsm.d = game_fsm.B_SET_TIMER_0_S10;
          }
          else{
            game_fsm.d = game_fsm.B_CHECK_SCORE_1;
          }   
            
      game_fsm.B_SET_TIMER_0_S10: 
          alufn = b011010; //"A"
          asel = b0111; 
          //bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0101;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          //TODO: CHANGE BACK TO MAP B!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
          game_fsm.d = game_fsm.MAP_B_DISPLAY;   
            
      game_fsm.B_CHECK_SCORE_1: 
          alufn = b110011; // CMPEQ
          asel = b0000; 
          bsel = b0010 ;
          we_regfile = b1;
          regfile_write_address = b1111; // temp reg 15
          regfile_read_address_a = b0000;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b001;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.B_CHECK_SCORE_1_BRANCH;  
            
      game_fsm.B_CHECK_SCORE_1_BRANCH: 
          //alufn = CMPEQ;
          //asel = b0000; 
          //bsel = b0001 ;
          //we_regfile = b1;
          //regfile_write_address = b1100;
          //regfile_read_address_a = b0101;
          regfile_read_address_b = b1111; // temp reg 15
          //wdsel = b00;
          //romsel = b001;
          //outsel = b01;
          //ledsel = b00;
          //seven_seg_1 = b00;
          //seven_seg_2 = b00;
          
          if (regfile_datain[0]){                      //direct read in
            game_fsm.d = game_fsm.B_SET_TIMER_1_S7;
          }
          else{
            game_fsm.d = game_fsm.B_SET_TIMER_2_S5;}   
              
       game_fsm.B_SET_TIMER_1_S7:
          alufn = b011010; //"A"
          asel = b0110; 
          //bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0101;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.MAP_B_DISPLAY;   
            
            
       game_fsm.B_SET_TIMER_2_S5:
          alufn = b011010; //"A"
          asel = b0101; 
          //bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0101;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          //TODO: CHANGE TO MAP B DISPLAY
          game_fsm.d = game_fsm.MAP_B_DISPLAY;
            
          
        game_fsm.MAP_B_DISPLAY: 
        //alufn = A;
        //asel = b0010; 
        //bsel = b0001 ;
        we_regfile = b0;
        //regfile_write_address = b0011;
        //regfile_read_address_a = ;
        //regfile_read_address_b = ;
        //wdsel = b00;
        romsel = b010;//
        outsel = b01;
        ledsel = b00;
        colsel = b10;
          if (decrease_timer_mapdisplay){
            game_fsm.d = game_fsm.B_CHECK_TIMER_0;
          }
          else {
            game_fsm.d = game_fsm.MAP_B_DISPLAY;}

          
          
         game_fsm.B_CHECK_TIMER_0: 
            alufn = b110011; //CMPEQ
            asel = b0000; 
            bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.B_BRANCH_TIMER_0;
              
              
              
         game_fsm.B_BRANCH_TIMER_0: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //direct read in
              
              game_fsm.d = game_fsm.C_CHECK_SCORE_0;
            }
            else{
              game_fsm.d = game_fsm.B_DECREASE_TIMER_1;
            }
              
              
        game_fsm.B_DECREASE_TIMER_1: 
            alufn = b000001;  //SUB
            asel = b0000; 
            bsel = b0010 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_B_DISPLAY;
          
            game_fsm.C_CHECK_SCORE_0: 
            alufn = b110011; // CMPEQ
            asel = b0000; 
            bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0000;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.C_CHECK_SCORE_0_BRANCH;  
              
        game_fsm.C_CHECK_SCORE_0_BRANCH: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0000;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //direct read in
              game_fsm.d = game_fsm.C_SET_TIMER_0_S10;
            }
            else{
              game_fsm.d = game_fsm.C_CHECK_SCORE_1;
            }   
              
        game_fsm.C_SET_TIMER_0_S10: 
            alufn = b011010; //"A"
            asel = b0111; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_C_DISPLAY;   
              
        game_fsm.C_CHECK_SCORE_1: 
            alufn = b110011; // CMPEQ
            asel = b0000; 
            bsel = b0010 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0000;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.C_CHECK_SCORE_1_BRANCH;  
              
        game_fsm.C_CHECK_SCORE_1_BRANCH: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //direct read in
              game_fsm.d = game_fsm.C_SET_TIMER_1_S7;
            }
            else{
              game_fsm.d = game_fsm.C_SET_TIMER_2_S5;}   
                
         game_fsm.C_SET_TIMER_1_S7:
            alufn = b011010; //"A"
            asel = b0110; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_C_DISPLAY;   
              
              
         game_fsm.C_SET_TIMER_2_S5:
            alufn = b011010; //"A"
            asel = b0101; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_C_DISPLAY;
              
          
          
          game_fsm.MAP_C_DISPLAY: 
            //alufn = A;
            //asel = b0010; 
            //bsel = b0001 ;
            we_regfile = b0;
            //regfile_write_address = b0011;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            //wdsel = b00;
            romsel = b011;
            outsel = b01;
            ledsel = b00;
            colsel = b11;
          
            if (decrease_timer_mapdisplay){
              game_fsm.d = game_fsm.C_CHECK_TIMER_0;
            }
            else {
              game_fsm.d = game_fsm.MAP_C_DISPLAY;
            }
          
          game_fsm.C_CHECK_TIMER_0: 
            alufn = b110011; //CMPEQ
            asel = b0000; 
            bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.C_BRANCH_TIMER_0;
          
          
          
         game_fsm.C_BRANCH_TIMER_0: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //direct read in
              game_fsm.d = game_fsm.DISPLAY_CORRECT_COLOUR;
            }
            else{
              game_fsm.d = game_fsm.C_DECREASE_TIMER_1;
            }
            
            
        game_fsm.C_DECREASE_TIMER_1: 
            alufn = b000001; //SUB
            asel = b0000; 
            bsel = b0010 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_C_DISPLAY;
          
          game_fsm.SET_CORRECT_COLOUR_MAP:
            alufn = b011010; //"A"
            asel = b0101; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            game_fsm.d = game_fsm.DISPLAY_CORRECT_COLOUR;
  
          
          game_fsm.DISPLAY_CORRECT_COLOUR: 
            //alufn = A;
            //asel = b0010; 
            //bsel = b0001 ;
            we_regfile = b0;
            //regfile_write_address = b0011;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            //wdsel = b00;
            romsel = b111;
            outsel = b01;
            ledsel = b00;
            colsel = b00;
            
            if (decrease_timer_mapdisplay){
                game_fsm.d = game_fsm.CORRECT_COLOUR_CHECK_TIMER_0;
              }
            else {
                game_fsm.d = game_fsm.DISPLAY_CORRECT_COLOUR;
            }
          
          game_fsm.CORRECT_COLOUR_CHECK_TIMER_0: 
            alufn = b110011; //CMPEQ
            asel = b0000; 
            bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.CORRECT_COLOUR_BRANCH_TIMER_0;
          
          
          
           game_fsm.CORRECT_COLOUR_BRANCH_TIMER_0: 
              //alufn = CMPEQ;
              //asel = b0000; 
              //bsel = b0001 ;
              //we_regfile = b1;
              //regfile_write_address = b1100;
              //regfile_read_address_a = b0101;
              regfile_read_address_b = b1111; // temp reg 15
              //wdsel = b00;
              //romsel = b001;
              //outsel = b01;
              //ledsel = b00;
              //seven_seg_1 = b00;
              //seven_seg_2 = b00;
              
              if (regfile_datain[0]){                      //direct read in
                game_fsm.d = game_fsm.DISPLAY_MEMORY_TRAILS;
              }
              else{
                game_fsm.d = game_fsm.CORRECT_COLOUR_DECREASE_TIMER_1;
              }  
        
        game_fsm.CORRECT_COLOUR_DECREASE_TIMER_1: 
            alufn = b000001; //SUB
            asel = b0000; 
            bsel = b0010 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.DISPLAY_CORRECT_COLOUR;
            
          game_fsm.DISPLAY_MEMORY_TRAILS: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            we_regfile = b0;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            //wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            ledsel = b01;
            
            game_fsm.d = game_fsm.SET_TIMER_90S;
          
        
         game_fsm.SET_TIMER_90S: 
            alufn = b011010; //ADD
            asel = b1000; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b01;
            
            //TODO: CHANGE TO IDLE
            game_fsm.d = game_fsm.SET_TIMER_90S; 
          
          game_fsm.IDLE: 
          
          //Check time first, more important
            /*
            if (decrease_timer_gameplay){
                game_fsm.d = game_fsm.CHECK_GAME_TIMER;
            }
            
            //movement checker
            else if (up_button){
              game_fsm.d = game_fsm.UP_CHECKER;
            }
            else if (down_button){
                game_fsm.d = game_fsm.DOWN_CHECKER;
            }
            else if (left_button){
                game_fsm.d = game_fsm.LEFT_CHECKER;
            }
            else if (right_button){
                game_fsm.d = game_fsm.RIGHT_CHECKER;
            }*/
            if (reset_button){ //change back to else if
                game_fsm.d = game_fsm.DISPLAY_SAD_FACE;
            }          
            else{
                game_fsm.d = game_fsm.IDLE; }
             
            
          /* 
          game_fsm.CHECK_GAME_TIMER:
              alufn = b110011;                         //CMPEQ
              regfile_read_address_a = b1100;          //timer reg
              asel = b00;
              bsel = b10;                              //constant 0
              we_regfile = 1;
              regfile_write_address = b1111;                 //temp eg 
              game_fsm.d = game_fsm.BRANCH_GAME_TIMER;
          
           game_fsm.BRANCH_GAME_TIMER:
              regfile_read_address_b = b1111;          //temp reg
              if (regfile_datain[0]){                 //if timer is not zero
                game_fsm.d = game_fsm.DECREASE_GAME_TIMER;
                }
              else{
                game_fsm.d = game_fsm.DISPLAY_SAD_FACE;
                }
          
           game_fsm.DECREASE_GAME_TIMER:
              alufn = b000001;                         //SUB
              regfile_read_address_a = b1100;          //timer reg
              asel = b00; 
              bsel = b01;                              //constant 1
              we_regfile = 1;
              regfile_write_address = b1100;
              game_fsm.d = game_fsm.IDLE;*/

           game_fsm.DISPLAY_SAD_FACE: 
            //alufn = A;
            //asel = b0010; 
            //bsel = b0001 ;
            we_regfile = b0;
            //regfile_write_address = b0011;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            //wdsel = b00;
            romsel = b110;
            outsel = b01;
            ledsel = b00;
            colsel = b00;
            
          
            game_fsm.d = game_fsm.DISPLAY_SAD_FACE;
          
        }
      }
    }
  }

