module game_CU (
    input clk,
    input rst,
    input up_button,
    input down_button,
    input right_button,
    input left_button,
    input start_button,
    input reset_button,
    input decrease_timer_gameplay,
    input decrease_timer_mapdisplay,
    
    input regfile_datain[16], //direct reading of regfile data from read_address_b
    
    output alufn[6], // ALUFN: -
    output asel[4], //ASEL: -
    output bsel[4],//BSEL: -
    output we_regfile[1],//WE: b1
    output regfile_read_address_a[4], //Ra: -
    output regfile_read_address_b[4], //Rb: -
    output regfile_write_address[4],//Rc: 0xD
    output wdsel[2], //WDSEL: b01
    output romsel[3], //ROMSEL: b000
    output outsel[2], //OUTSEL: b00
    output ledsel[2], //LEDSEL: b00
    output colsel[2]
  ) {
  
  .clk(clk){
    fsm game_fsm={
      TEST_SHIFTER,
      
      START_NEW_GAME,
      
      RESET_SCORE_TO_0,
      
      //RESET ROUND
      RESET_TIMER_0,
      RESET_X_COORD,  
      RESET_Y_COORD, 
      RESET_SELECT_MAPS,  
      RESET_CORRECT_MAP, 
      RESET_MEM_TRAIL_1,
      RESET_MEM_TRAIL_2,
      RESET_MEM_TRAIL_3,
      RESET_MEM_TRAIL_4,
      RESET_MEM_TRAIL_5,
      RESET_MEM_TRAIL_6,
      
      
      
      START_STATE,
      
      //Randomiser
      RANDOM_CHOOSE_MAP,
      RANDOM_SET_MAP,
      
      //Set map A display time
      A_CHECK_SCORE_0,
      A_CHECK_SCORE_0_BRANCH,
      A_SET_TIMER_0_S10,
      A_CHECK_SCORE_1,
      A_CHECK_SCORE_1_BRANCH,
      A_SET_TIMER_1_S7,
      A_SET_TIMER_2_S5,
      
      //Display map A
      MAP_A_DISPLAY,
      A_CHECK_TIMER_0,
      A_BRANCH_TIMER_0,
      A_DECREASE_TIMER_1,
      
      //Set map B display time
      B_CHECK_SCORE_0,
      B_CHECK_SCORE_0_BRANCH,
      B_SET_TIMER_0_S10,
      B_CHECK_SCORE_1,
      B_CHECK_SCORE_1_BRANCH,
      B_SET_TIMER_1_S7,
      B_SET_TIMER_2_S5,
      
      //Display map B
      MAP_B_DISPLAY,
      B_CHECK_TIMER_0,
      B_BRANCH_TIMER_0,
      B_DECREASE_TIMER_1,
      
      //Set map C display time
      C_CHECK_SCORE_0,
      C_CHECK_SCORE_0_BRANCH,
      C_SET_TIMER_0_S10,
      C_CHECK_SCORE_1,
      C_CHECK_SCORE_1_BRANCH,
      C_SET_TIMER_1_S7,
      C_SET_TIMER_2_S5,
      
      //Display map C   
      MAP_C_DISPLAY,
      C_CHECK_TIMER_0,
      C_BRANCH_TIMER_0,
      C_DECREASE_TIMER_1,
      
      //Display correct color
      SET_CORRECT_COLOUR_MAP,
      DISPLAY_CORRECT_COLOUR,
      CORRECT_COLOUR_CHECK_TIMER_0,
      CORRECT_COLOUR_BRANCH_TIMER_0,
      CORRECT_COLOUR_DECREASE_TIMER_1,
      
      
      DISPLAY_MEMORY_TRAILS,      
      SET_TIMER_90S,
      
      //Idle state timer
      //IDLE, TODO: UNCOMMENT LATER
      CHECK_GAME_TIMER,
      BRANCH_GAME_TIMER,
      DECREASE_GAME_TIMER,
      
      //Idle state movement checker
      IDLE,
      UP_CHECKER,
      DOWN_CHECKER,
      LEFT_CHECKER,
      RIGHT_CHECKER,
      
      //MOVEMENT checks and coord updates
      UP_INCREASEBY1,
      RIGHT_INCREASEBY1,
      
      //X COORD TO 6BIT CONVERSION
      CHECK_X_0,
      CHECK_X_0_BRANCH,
      CONVERT_X_0,
      CHECK_X_1,
      CHECK_X_1_BRANCH,
      CONVERT_X_1,
      
      //MEMORY TRAILS
      CONVERT_X_6BIT,
      CHECK_Y_0,
      CHECK_Y_0_BRANCH,
      Y0_UPDATE_DISPLAY_MEMTRAIL,
      Y1_UPDATE_DISPLAY_MEMTRAIL,
      TEST_TRAIL,
      TEST_TRAIL_X,
      //TEST_SHIFTER,
      
      
      //End of round displays
      DISPLAY_SAD_FACE    
      
      
      
      
      };
  }

  always {
    // standard setting unless otherwise overwritten by each case 
    alufn = 0;
    asel = 0; 
    bsel = 0;
    we_regfile = 0;
    regfile_write_address = 1111;
    regfile_read_address_a = 0000;
    regfile_read_address_b = 0000;
    wdsel = 0;
    romsel = 0;
    outsel = 0;
    ledsel = 0;
    colsel = 0;
    
    if (rst) {
      //do something
    } else {
      case(game_fsm.q){
        game_fsm.START_NEW_GAME: 
          ledsel = b00;
          if (start_button){ //reset button instantly bypasses.
              game_fsm.d = game_fsm.RESET_SCORE_TO_0;
          }
               
          else {        
              game_fsm.d = game_fsm.START_NEW_GAME;
          }
          
        game_fsm.RESET_SCORE_TO_0: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0000;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_TIMER_0;  
          
        game_fsm.RESET_TIMER_0: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0101;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_X_COORD;
          
        game_fsm.RESET_X_COORD: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0001;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;  
          
          game_fsm.d = game_fsm.RESET_Y_COORD;  
            
        game_fsm.RESET_Y_COORD: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0010;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_SELECT_MAPS;
            
        game_fsm.RESET_SELECT_MAPS: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0011;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_CORRECT_MAP;  
        
        game_fsm.RESET_CORRECT_MAP: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0100;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_MEM_TRAIL_1;
            
       game_fsm.RESET_MEM_TRAIL_1: 
          alufn = b011010; //"A"
          asel = b1001; 
          //bsel = b0010 ;
          we_regfile = b1;
          regfile_write_address = b0110;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_MEM_TRAIL_2;
            
       game_fsm.RESET_MEM_TRAIL_2: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0111;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_MEM_TRAIL_3;
            
       game_fsm.RESET_MEM_TRAIL_3: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b1000;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_MEM_TRAIL_4;     
            
       game_fsm.RESET_MEM_TRAIL_4: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b1001;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_MEM_TRAIL_5;     
            
        game_fsm.RESET_MEM_TRAIL_5: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b1010;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RESET_MEM_TRAIL_6; 
                
        game_fsm.RESET_MEM_TRAIL_6: 
          alufn = b011100; //"B"
          //asel = ; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b1011;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          //TODO: how to know to skip this, 
          //create another state?
          game_fsm.d = game_fsm.START_STATE;
          
        

            
        game_fsm.START_STATE:
          //alufn = ;
          //asel = ; 
          //bsel = ;
          we_regfile = b0;
          //regfile_write_address = ;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          //wdsel = ;
          romsel = b100; 
          outsel = b01;
          ledsel = b00;
          colsel = b10;
          if (start_button){
            game_fsm.d = game_fsm.RANDOM_CHOOSE_MAP;
          } else {
             game_fsm.d = game_fsm.START_STATE;
          }
          
        game_fsm.RANDOM_CHOOSE_MAP: 
          alufn = b011010; //"A"
          asel = b0001; 
          //bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0100;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.RANDOM_SET_MAP;
          
         game_fsm.RANDOM_SET_MAP: 
            alufn = b011010; //"A"
            asel = b0010; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0011;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.A_CHECK_SCORE_0;
          
         game_fsm.A_CHECK_SCORE_0: 
            alufn = b110011; // CMPEQ
            asel = b0000; 
            bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0000;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.A_CHECK_SCORE_0_BRANCH;  
          
        game_fsm.A_CHECK_SCORE_0_BRANCH: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //directly reads from Rb
              game_fsm.d = game_fsm.A_SET_TIMER_0_S10;
            }
            else{
              game_fsm.d = game_fsm.A_CHECK_SCORE_1;
            }   
          
        game_fsm.A_SET_TIMER_0_S10: 
            alufn = b011010; //"A"
            asel = b0111; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_A_DISPLAY;   
              
        game_fsm.A_CHECK_SCORE_1: 
            alufn = b110011; // CMPEQ
            asel = b0000; 
            bsel = b0010 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0000;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.A_CHECK_SCORE_1_BRANCH;  
              
        game_fsm.A_CHECK_SCORE_1_BRANCH: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //direct read in
              game_fsm.d = game_fsm.A_SET_TIMER_1_S7;
            }
            else{
              game_fsm.d = game_fsm.A_SET_TIMER_2_S5;}   
                
         game_fsm.A_SET_TIMER_1_S7:
            alufn = b011010; //"A"
            asel = b0110; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_A_DISPLAY;   
              
              
         game_fsm.A_SET_TIMER_2_S5:
            alufn = b011010; //"A"
            asel = b0101; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_A_DISPLAY;
          
         game_fsm.MAP_A_DISPLAY: 
            //alufn = A;
            //asel = b0010; 
            //bsel = b0001 ;
            we_regfile = b0;
            //regfile_write_address = b0011;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            //wdsel = b00;
            romsel = b001;
            outsel = b01;
            ledsel = b00;
            colsel = b01;
            
            if (decrease_timer_mapdisplay){
              game_fsm.d = game_fsm.A_CHECK_TIMER_0;
            }
            else {
              game_fsm.d = game_fsm.MAP_A_DISPLAY;}
            
          game_fsm.A_CHECK_TIMER_0: 
            alufn = b110011; //CMPEQ
            asel = b0000; 
            bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.A_BRANCH_TIMER_0;          
                   
         game_fsm.A_BRANCH_TIMER_0: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //direct read in
              game_fsm.d = game_fsm.B_CHECK_SCORE_0;
            }
            else{
              game_fsm.d = game_fsm.A_DECREASE_TIMER_1;
            }
              
              
        game_fsm.A_DECREASE_TIMER_1: 
            alufn = b000001;  //SUB
            asel = b0000; 
            bsel = b0010 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_A_DISPLAY;
          
        game_fsm.B_CHECK_SCORE_0: 
          alufn = b110011; // CMPEQ
          asel = b0000; 
          bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b1111; // temp reg 15
          regfile_read_address_a = b0000;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b001;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.B_CHECK_SCORE_0_BRANCH;  
          
      game_fsm.B_CHECK_SCORE_0_BRANCH: 
          //alufn = CMPEQ;
          //asel = b0000; 
          //bsel = b0001 ;
          //we_regfile = b1;
          //regfile_write_address = b1100;
          //regfile_read_address_a = b0101;
          regfile_read_address_b = b1111; // temp reg 15
          //wdsel = b00;
          //romsel = b001;
          //outsel = b01;
          //ledsel = b00;
          //seven_seg_1 = b00;
          //seven_seg_2 = b00;
          
          if (regfile_datain[0]){                      //direct read in
            game_fsm.d = game_fsm.B_SET_TIMER_0_S10;
          }
          else{
            game_fsm.d = game_fsm.B_CHECK_SCORE_1;
          }   
            
      game_fsm.B_SET_TIMER_0_S10: 
          alufn = b011010; //"A"
          asel = b0111; 
          //bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0101;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          //TODO: CHANGE BACK TO MAP B!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
          game_fsm.d = game_fsm.MAP_B_DISPLAY;   
            
      game_fsm.B_CHECK_SCORE_1: 
          alufn = b110011; // CMPEQ
          asel = b0000; 
          bsel = b0010 ;
          we_regfile = b1;
          regfile_write_address = b1111; // temp reg 15
          regfile_read_address_a = b0000;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b001;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.B_CHECK_SCORE_1_BRANCH;  
            
      game_fsm.B_CHECK_SCORE_1_BRANCH: 
          //alufn = CMPEQ;
          //asel = b0000; 
          //bsel = b0001 ;
          //we_regfile = b1;
          //regfile_write_address = b1100;
          //regfile_read_address_a = b0101;
          regfile_read_address_b = b1111; // temp reg 15
          //wdsel = b00;
          //romsel = b001;
          //outsel = b01;
          //ledsel = b00;
          //seven_seg_1 = b00;
          //seven_seg_2 = b00;
          
          if (regfile_datain[0]){                      //direct read in
            game_fsm.d = game_fsm.B_SET_TIMER_1_S7;
          }
          else{
            game_fsm.d = game_fsm.B_SET_TIMER_2_S5;}   
              
       game_fsm.B_SET_TIMER_1_S7:
          alufn = b011010; //"A"
          asel = b0110; 
          //bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0101;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          game_fsm.d = game_fsm.MAP_B_DISPLAY;   
            
            
       game_fsm.B_SET_TIMER_2_S5:
          alufn = b011010; //"A"
          asel = b0101; 
          //bsel = b0001 ;
          we_regfile = b1;
          regfile_write_address = b0101;
          //regfile_read_address_a = ;
          //regfile_read_address_b = ;
          wdsel = b00;
          //romsel = b100;
          //outsel = b01;
          //ledsel = b00;
          
          //TODO: CHANGE TO MAP B DISPLAY
          game_fsm.d = game_fsm.MAP_B_DISPLAY;
            
          
        game_fsm.MAP_B_DISPLAY: 
        //alufn = A;
        //asel = b0010; 
        //bsel = b0001 ;
        we_regfile = b0;
        //regfile_write_address = b0011;
        //regfile_read_address_a = ;
        //regfile_read_address_b = ;
        //wdsel = b00;
        romsel = b010;//
        outsel = b01;
        ledsel = b00;
        colsel = b10;
          if (decrease_timer_mapdisplay){
            game_fsm.d = game_fsm.B_CHECK_TIMER_0;
          }
          else {
            game_fsm.d = game_fsm.MAP_B_DISPLAY;}

          
          
         game_fsm.B_CHECK_TIMER_0: 
            alufn = b110011; //CMPEQ
            asel = b0000; 
            bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.B_BRANCH_TIMER_0;
              
              
              
         game_fsm.B_BRANCH_TIMER_0: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //direct read in
              
              game_fsm.d = game_fsm.C_CHECK_SCORE_0;
            }
            else{
              game_fsm.d = game_fsm.B_DECREASE_TIMER_1;
            }
              
              
        game_fsm.B_DECREASE_TIMER_1: 
            alufn = b000001;  //SUB
            asel = b0000; 
            bsel = b0010 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_B_DISPLAY;
          
            game_fsm.C_CHECK_SCORE_0: 
            alufn = b110011; // CMPEQ
            asel = b0000; 
            bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0000;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.C_CHECK_SCORE_0_BRANCH;  
              
        game_fsm.C_CHECK_SCORE_0_BRANCH: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0000;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //direct read in
              game_fsm.d = game_fsm.C_SET_TIMER_0_S10;
            }
            else{
              game_fsm.d = game_fsm.C_CHECK_SCORE_1;
            }   
              
        game_fsm.C_SET_TIMER_0_S10: 
            alufn = b011010; //"A"
            asel = b0111; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_C_DISPLAY;   
              
        game_fsm.C_CHECK_SCORE_1: 
            alufn = b110011; // CMPEQ
            asel = b0000; 
            bsel = b0010 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0000;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.C_CHECK_SCORE_1_BRANCH;  
              
        game_fsm.C_CHECK_SCORE_1_BRANCH: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //direct read in
              game_fsm.d = game_fsm.C_SET_TIMER_1_S7;
            }
            else{
              game_fsm.d = game_fsm.C_SET_TIMER_2_S5;}   
                
         game_fsm.C_SET_TIMER_1_S7:
            alufn = b011010; //"A"
            asel = b0110; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_C_DISPLAY;   
              
              
         game_fsm.C_SET_TIMER_2_S5:
            alufn = b011010; //"A"
            asel = b0101; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_C_DISPLAY;
              
          
          
          game_fsm.MAP_C_DISPLAY: 
            //alufn = A;
            //asel = b0010; 
            //bsel = b0001 ;
            we_regfile = b0;
            //regfile_write_address = b0011;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            //wdsel = b00;
            romsel = b011;
            outsel = b01;
            ledsel = b00;
            colsel = b11;
          
            if (decrease_timer_mapdisplay){
              game_fsm.d = game_fsm.C_CHECK_TIMER_0;
            }
            else {
              game_fsm.d = game_fsm.MAP_C_DISPLAY;
            }
          
          game_fsm.C_CHECK_TIMER_0: 
            alufn = b110011; //CMPEQ
            asel = b0000; 
            bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.C_BRANCH_TIMER_0;
          
          
          
         game_fsm.C_BRANCH_TIMER_0: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            //we_regfile = b1;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            regfile_read_address_b = b1111; // temp reg 15
            //wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            //seven_seg_1 = b00;
            //seven_seg_2 = b00;
            
            if (regfile_datain[0]){                      //direct read in
              game_fsm.d = game_fsm.DISPLAY_CORRECT_COLOUR;
            }
            else{
              game_fsm.d = game_fsm.C_DECREASE_TIMER_1;
            }
            
            
        game_fsm.C_DECREASE_TIMER_1: 
            alufn = b000001; //SUB
            asel = b0000; 
            bsel = b0010 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.MAP_C_DISPLAY;
          
          game_fsm.SET_CORRECT_COLOUR_MAP:
            alufn = b011010; //"A"
            asel = b0101; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b00;
            game_fsm.d = game_fsm.DISPLAY_CORRECT_COLOUR;
  
          
          game_fsm.DISPLAY_CORRECT_COLOUR: 
            //alufn = A;
            //asel = b0010; 
            //bsel = b0001 ;
            we_regfile = b0;
            //regfile_write_address = b0011;
            //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            //wdsel = b00;
            romsel = b111;
            outsel = b01;
            ledsel = b00;
            colsel = b00;
            
            if (decrease_timer_mapdisplay){
                game_fsm.d = game_fsm.CORRECT_COLOUR_CHECK_TIMER_0;
              }
            else {
                game_fsm.d = game_fsm.DISPLAY_CORRECT_COLOUR;
            }
          
          game_fsm.CORRECT_COLOUR_CHECK_TIMER_0: 
            alufn = b110011; //CMPEQ
            asel = b0000; 
            bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.CORRECT_COLOUR_BRANCH_TIMER_0;
          
          
          
           game_fsm.CORRECT_COLOUR_BRANCH_TIMER_0: 
              //alufn = CMPEQ;
              //asel = b0000; 
              //bsel = b0001 ;
              //we_regfile = b1;
              //regfile_write_address = b1100;
              //regfile_read_address_a = b0101;
              regfile_read_address_b = b1111; // temp reg 15
              //wdsel = b00;
              //romsel = b001;
              //outsel = b01;
              //ledsel = b00;
              //seven_seg_1 = b00;
              //seven_seg_2 = b00;
              
              if (regfile_datain[0]){                      //direct read in
                game_fsm.d = game_fsm.DISPLAY_MEMORY_TRAILS;
              }
              else{
                game_fsm.d = game_fsm.CORRECT_COLOUR_DECREASE_TIMER_1;
              }  
        
        game_fsm.CORRECT_COLOUR_DECREASE_TIMER_1: 
            alufn = b000001; //SUB
            asel = b0000; 
            bsel = b0010 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
            
            game_fsm.d = game_fsm.DISPLAY_CORRECT_COLOUR;
            
          game_fsm.DISPLAY_MEMORY_TRAILS: 
            //alufn = CMPEQ;
            //asel = b0000; 
            //bsel = b0001 ;
            we_regfile = b0;
            //regfile_write_address = b1100;
            //regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            //wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            ledsel = b01;
            
            game_fsm.d = game_fsm.SET_TIMER_90S;
          
        
         game_fsm.SET_TIMER_90S: 
            alufn = b011010; //A
            asel = b1000; 
            //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0101;
            //regfile_read_address_a = b0101;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            //ledsel = b01;
            
            game_fsm.d = game_fsm.IDLE; 
          
          
          game_fsm.IDLE: 
          
            ledsel = b01;
          //Check time first, more important
            /*
            if (decrease_timer_gameplay){
                game_fsm.d = game_fsm.CHECK_GAME_TIMER;
            }
            
            
        */
         
            //movement checker
            /*
            if (up_button){ //change to else if 
              //game_fsm.d = game_fsm.UP_CHECKER;
              game_fsm.d = game_fsm.UP_INCREASEBY1;
            } */
            
            //else if (right_button){ //TODO: CHANGE BACK TO ORIGINAL
            if (start_button){
                //game_fsm.d = game_fsm.RIGHT_CHECKER;
              game_fsm.d = game_fsm.RIGHT_INCREASEBY1;
            }
        
            /*
            else if (down_button){
                game_fsm.d = game_fsm.DOWN_CHECKER;
            }
            else if (left_button){
                game_fsm.d = game_fsm.LEFT_CHECKER;
            }
            */
            

            else if (reset_button){ 
                game_fsm.d = game_fsm.DISPLAY_SAD_FACE; 
                
            } else if (right_button){ //TODO: delete whole block when done testing
                game_fsm.d = game_fsm.TEST_TRAIL; //TEST display 000111 on LEDs
            }         
            else{
                game_fsm.d = game_fsm.IDLE; 
            }
           
           game_fsm.TEST_TRAIL:
            alufn = b011010; //"A"
            asel = b0110; //display 000111
           //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0110; //update y0
           //regfile_read_address_a = ;
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            ledsel = b01;
            game_fsm.d = game_fsm.IDLE;
           
          
           
          /*
          game_fsm.UP_INCREASEYBY1: 
            alufn = b000001; //ADD
            asel = b0000; 
            bsel = b0010 ; // 1
            we_regfile = b1;
            regfile_write_address = b0010; //ycoord
            regfile_read_address_a = b0010; //ycoord
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b01;
    
            //game_fsm.d = game_fsm.PULL_BIT_ROM;
            game_fsm.d = game_fsm.CONVERT_X_6BIT;*/
         
      
          /*TEST STATES DELETE ONCE DONE*/
            //TEST state to set value of mem trail
          //directly display converted x 6 bit
          game_fsm.TEST_TRAIL_X:
            alufn = b011010; //"A"
            asel = b0000; 
           //bsel = b0001 ;
            we_regfile = b1;
            regfile_write_address = b0110; //update y0 trail
            regfile_read_address_a = b1101; //convert_x_6bit output
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b100;
            //outsel = b01;
            ledsel = b01;
            game_fsm.d = game_fsm.IDLE;
      
           game_fsm.TEST_SHIFTER: 
            alufn = b100001; //"SHR"
            asel = b1001; //b100000
            bsel = b0100; //test case: 3 output: b000100
            we_regfile = b1;
            regfile_write_address = b0110; //write directly to led memtrail 0

            wdsel = b00;
            ledsel = b01;

            game_fsm.d = game_fsm.TEST_SHIFTER;
          
          //Increase x by 1
          game_fsm.RIGHT_INCREASEBY1:
            alufn = b000001; //ADD
            asel = b0000; 
            bsel = b0010 ; // 1
            we_regfile = b1;
            regfile_write_address = b0001; //xcoord
            regfile_read_address_a = b0001; //xcoord
            //regfile_read_address_b = ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b01;
    
            //game_fsm.d = game_fsm.PULL_BIT_ROM; //TODO: CHANGE BACK TO ORIGINAL
            //game_fsm.d = game_fsm.CONVERT_X_6BIT;
            game_fsm.d = game_fsm.CONVERT_X_6BIT;
      
          /*CONVERSION OF X TO 6 BITS STATES
           game_fsm.CHECK_X_0: 
            alufn = b110011; //CMPEQ
            asel = b0000; 
            bsel = b0001;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0010 ;
            //regfile_read_address_b = b1100 ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
    
            
            game_fsm.d = game_fsm.Y0_UPDATE_DISPLAY_MEMTRAIL;*/
       
          
          
          /*
          //PROBLEM FOUND: OUTPUT OF THIS IS 0, THATS WHY OR OPERATIONS DID NOTHING
          //CURRENT TEST: shift by 1, so output of strip: 010000
          //RESULT: STILL 0
          //TEST 2: SHIFT ANY RANDOM NUMBER BY 1 TO SEE THE RESULT
          game_fsm.CONVERT_X_6BIT: 
            //Convert to get current position of x in the row
            //shifting right 6b10..0 by x
            //SHR is shift A by B bits
            alufn = b100001; //SHR
            asel = b1001; //6b10..0
            //bsel = b0000; //TODO: ORIGINAL CODE
            bsel = b0010; //test case: 1, but original should be x
            we_regfile = b1;
            regfile_write_address = b1101; //store new position for memtrail in temp reg 13
            //regfile_read_address_a = b0011; 
            //regfile_read_address_b = b0001 ; //x
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
    
            
            //game_fsm.d = game_fsm.CHECK_Y_0; //TODO: CHANGE BACK TO ORIGINAL
            game_fsm.d = game_fsm.TEST_TRAIL_X;*/
           
         
          
         
      
           game_fsm.CHECK_Y_0: 
            alufn = b110011; //CMPEQ
            asel = b0000; 
            bsel = b0001;
            we_regfile = b1;
            regfile_write_address = b1111; // temp reg 15
            regfile_read_address_a = b0010 ;
            //regfile_read_address_b = b1100 ;
            wdsel = b00;
            //romsel = b001;
            //outsel = b01;
            //ledsel = b00;
    
            
            game_fsm.d = game_fsm.Y0_UPDATE_DISPLAY_MEMTRAIL;
              
          
         /* 
         game_fsm.CHECK_Y_0_BRANCH: 
              //alufn = CMPEQ;
              //asel = b0000; 
              //bsel = b0001 ;
              //we_regfile = b1;
              //regfile_write_address = b1100;
              //regfile_read_address_a = b0101;
              regfile_read_address_b = b1111; // temp reg 15
              //wdsel = b00;
              //romsel = b001;
              //outsel = b01;
              //ledsel = b00;
              //seven_seg_1 = b00;
              //seven_seg_2 = b00;
              
              if (regfile_datain[0]){                      //direct read in
                game_fsm.d = game_fsm.Y0_UPDATE_DISPLAY_MEMTRAIL;
              }
              else{
                //game_fsm.d = game_fsm.CHECK_Y_1; //go memeory trail
                game_fsm.d = game_fsm.Y1_UPDATE_DISPLAY_MEMTRAIL;
         }
      */           
          
          game_fsm.Y0_UPDATE_DISPLAY_MEMTRAIL: 
              alufn = b011110; //OR;
              asel = b0000; 
              bsel = b0000;
              we_regfile = b1;
              regfile_write_address = b0110; 
              regfile_read_address_a = b0110; //current 1st row
              regfile_read_address_b = b1101; //temp reg 13
              wdsel = b00;
              //romsel = b001;
              //outsel = b01;
              ledsel = b01;
      
              game_fsm.d = game_fsm.IDLE; 
              //game_fsm.d = game_fsm.Y0_UPDATE_DISPLAY_MEMTRAIL;
          
          /*
          game_fsm.Y1_UPDATE_DISPLAY_MEMTRAIL: 
              alufn = b011110; //OR;
              asel = b0000; 
              bsel = b0000;
              we_regfile = b1;
              regfile_write_address = b0111;
              regfile_read_address_a = b0111; //current 2nd row
              regfile_read_address_b = b1101; //temp reg 13
              wdsel = b00;
              //romsel = b001;
              //outsel = b01;
              ledsel = b01;
      
              game_fsm.d = game_fsm.IDLE;
              //game_fsm.d = game_fsm.Y1_UPDATE_DISPLAY_MEMTRAIL;  
          */
          
          game_fsm.DISPLAY_SAD_FACE: 
              //alufn = A;
              //asel = b0010; 
              //bsel = b0001 ;
              we_regfile = b0;
              //regfile_write_address = b0011;
              //regfile_read_address_a = ;
              //regfile_read_address_b = ;
              //wdsel = b00;
              romsel = b110;
              outsel = b01;
              ledsel = b00;
              colsel = b01;
              
              game_fsm.d = game_fsm.START_NEW_GAME;
          
        }
      }
    }
  }

